#
# wm independent hotkeys
#

# terminal emulator
super + Return
	$TERMINAL

super + a
	$TERMINAL

super + q
	zathura

# program launcher using .desktop files
super + p
	rofi -show drun

# program launcher using terminal commands
super + r
	rofi -show run

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# Lock the screen
super + alt + l
	loginctl lock-session
	#locki3.sh

# Edit the configuration
super + e + v
	$TERMINAL -e zsh -c "vim $XDG_CONFIG_HOME/bspwm/bspwmrc $XDG_CONFIG_HOME/sxhkd/sxhkdrc"


#
# bspwm hotkeys
#

# quit/restart bspwm
super + shift + {q,r}
	bspc {quit,wm -r}

# close and kill
ctrl + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest



#
# Media
#

# Change backlight settings
F11
	xbacklight -dec 10

F12
	xbacklight -inc 10

# Change sound settings
F7
	pactl set-source-mute @DEFAULT_SOURCE@ toggle
F8
	pactl set-sink-mute @DEFAULT_SINK@ toggle
F9
	pactl set-sink-volume @DEFAULT_SINK@ -10%
F10
	pactl set-sink-volume @DEFAULT_SINK@ +10%


#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {n,m,x,y,z}
	bspc node -g {hidden,marked,locked,sticky,private}

# unhide a node
super + shift + n
	bspc node {,$(bspc query -N -n .hidden | tail -n1)} -g hidden=off



#
# focus/swap
#

# Desktop = workspace
# Node = application
# Monitor = output

# The concept is to have:
# - mod + ctrl + {left, right} = change output
# - mod + {1-9, 0} = change workspace on output
# - mod + {left, right} = previous/next workspace on output

# focus the node in the given direction => OK
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous desktop in the current monitor
super + {Left, Right}
	bspc desktop -f {prev,next}.local

# focus the previous/next monitor
super + ctrl + {Left, Right}
	bspc monitor -f {prev, next}
super + ctrl + {h, l}
	bspc monitor -f {prev, next}

# # focus the older or newer node in the focus history
# super + {o,i}
# 	bspc wm -h off; \
# 	bspc node {older,newer} -f; \
# 	bspc wm -h on

# focus the given desktop
super + {1-9,0}
	bspc desktop -f 'focused:^{1-9,10}'



#
# Move
#

# # move a floating window
# super + {Left,Down,Up,Right}
# 	bspc node -v {-20 0,0 20,0 -20,20 0}

# send to the given desktop on the current monitor
super + shift + {1-9,0}
	bspc node -d 'focused:^{1-9,10}'

# send to the next monitor
super + {o,i}
	bspc node -m {next,prev} -f



#
# Preselect
#

# # preselect the direction
# super + ctrl + {h,j,k,l}
# 	bspc node -p {west,south,north,east}

# # preselect the ratio
# super + ctrl + {1-9}
# 	bspc node -o 0.{1-9}
# 
# # cancel the preselection for the focused node
# super + ctrl + space
# 	bspc node -p cancel
# 
# # cancel the preselection for the focused desktop
# super + ctrl + shift + space
# 	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel



#
# Resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# vim:ts=4 sts=4 sw=4 noexpandtab
